{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","remarksValue","document","getElementById","titlesValue","list","querySelector","useState","titles","titleValue","remark","remarkValue","className","type","id","placeholder","onChange","e","target","value","onClick","innerHTML","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sMAuCeA,MApCf,WACE,IAAIC,EAAgBC,SAASC,eAAe,aACxCC,EAAcF,SAASC,eAAe,SACtCE,EAAOH,SAASI,cAAc,SACnC,EAAwBC,mBAAS,KAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KAID,EAAyBF,mBAAS,KAAlC,mBAAKG,EAAL,KAAYC,EAAZ,KAeE,OACE,sBAAKC,UAAU,UAAf,UACA,qBAAKA,UAAU,OAAf,yBACE,uBAAOC,KAAK,OAAOC,GAAG,QAAQC,YAAY,QAAQC,SArB5C,SAACC,GACXR,EAAWQ,EAAEC,OAAOC,UAqBhB,uBAAON,KAAK,OAAQC,GAAG,YAAYC,YAAY,SAASC,SAlBlD,SAACC,GACVN,EAAYM,EAAEC,OAAOC,UAkBlB,wBAAQL,GAAG,MAAMM,QAfb,WAENf,EAAKgB,WAAL,gCAEQb,EAFR,2BAGOE,EAHP,mBAKAN,EAAYe,MAAM,IAClBlB,EAAakB,MAAO,KAOlB,eACC,oBAAIP,UAAU,aCpBNU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASC,eAAe,SAM1BmB,K","file":"static/js/main.3ce09356.chunk.js","sourcesContent":["import React,{useState} from \"react\"\nimport './App.css';\n\nfunction App() {\n  let remarksValue  = document.getElementById(\"textValue\")\n  let titlesValue = document.getElementById(\"title\")\n  let list = document.querySelector(\".list\")\n let [titles,titleValue]=useState(\" \")\n  let title=(e)=>{\n  titleValue(e.target.value)\n  }\nlet [remark,remarkValue]=useState(\" \")\n  let value=(e)=>{\n   remarkValue(e.target.value)\n  }\n\n  let add=()=>{\n   \n    list.innerHTML +=`\n    <li>\n      <h2>${titles}</h2>\n      <p>${remark}</p>\n    </li>`\n    titlesValue.value=\" \"\n    remarksValue.value =\" \"\n  }\n  return (\n    <div className=\"contain\">\n    <div className=\"head\">Google keep</div>\n      <input type=\"text\" id=\"title\" placeholder=\"Title\" onChange={title}/>\n      <input type=\"text\"  id=\"textValue\" placeholder=\"Remark\" onChange={value}/>\n      <button id=\"add\" onClick={add}>+</button>\n       <ul className=\"list\">\n\n       </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}